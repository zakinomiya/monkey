// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[Eof-1]
	_ = x[Plus-2]
	_ = x[Minus-3]
	_ = x[Multiply-4]
	_ = x[Division-5]
	_ = x[Assign-6]
	_ = x[Comma-7]
	_ = x[Period-8]
	_ = x[Semicolon-9]
	_ = x[Lparen-10]
	_ = x[Rparen-11]
	_ = x[Lbrace-12]
	_ = x[Rbrace-13]
	_ = x[Function-14]
	_ = x[Let-15]
	_ = x[Ident-16]
	_ = x[Int-17]
}

const _TokenType_name = "IllegalEofPlusMinusMultiplyDivisionAssignCommaPeriodSemicolonLparenRparenLbraceRbraceFunctionLetIdentInt"

var _TokenType_index = [...]uint8{0, 7, 10, 14, 19, 27, 35, 41, 46, 52, 61, 67, 73, 79, 85, 93, 96, 101, 104}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
